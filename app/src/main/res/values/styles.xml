<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorPrimary</item>
    </style>

    <style name="PermissionXDialog" parent="android:style/Theme.Dialog">
        <!--背景颜色及和透明程度-->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!--是否去除标题 -->
        <item name="android:windowNoTitle">true</item>
        <!--是否去除边框-->
        <item name="android:windowFrame">@null</item>
        <!--是否浮现在activity之上-->
        <item name="android:windowIsFloating">true</item>
        <!--是否模糊-->
        <item name="android:backgroundDimEnabled">true</item>
    </style>

    <!--  Widget.Design.BottomNavigationView  -->
    <style name="BottomNavigationItemViewStyle">
        <!-- 按下时水波纹效果 , 去除水波纹 @null -->
        <!--<item name="itemRippleColor">@null</item>-->
        <item name="itemRippleColor">@color/mtrl_bottom_nav_ripple_color</item>
        <!-- 在“选定”标签可见性模式下，项目是否水平平移 -->
        <item name="itemHorizontalTranslationEnabled">false</item>
        <!-- 显示标签模式,四种: auto selected labeled unlabeled-->
        <item name="labelVisibilityMode">labeled</item>

        <!-- 设置背景: itemBackground 会覆盖 android:background , 任选其一 -->
        <!-- <item name="android:background">?android:attr/windowBackground</item>-->
        <!-- <item name="itemBackground">?android:attr/windowBackground</item>-->
        <item name="itemBackground">?android:attr/windowBackground</item>

        <!-- 图标和文字的颜色样式 + 图标大小,用选择器写控制 state_checked 属性即可 -->
        <item name="itemIconSize">@dimen/dp_20</item>
        <item name="itemIconTint">@drawable/sel_main_nav</item>
        <item name="itemTextColor">@drawable/sel_main_nav</item>
        <!--<item name="itemIconPadding">@dimen/dp_20</item>-->

        <!-- 控制选中和未选中时的字体大小, 系统默认一个12sp一个14sp产生有字体缩放的效果,给一个大小就好了 -->
        <!-- 代码方式需要用到反射,不推荐 http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0428/7888.html -->
        <item name="itemTextAppearanceInactive">@style/BottomNavigationItemViewText</item>
        <item name="itemTextAppearanceActive">@style/BottomNavigationItemViewText</item>

        <!--  阴影效果: https://developer.android.com/training/material/shadows-clipping -->
        <item name="elevation">0dp</item>

        <!-- 如果定义了不同图片进行切换,而不只是简单的改变颜色, 需要代码中设置: BottomNavigationItemView.itemIconTintList = null -->

    </style>

    <style name="BottomNavigationItemViewText">
        <item name="android:textSize">@dimen/font_12</item>
    </style>

    <style name="TabLayoutTextStyle">
        <item name="android:textSize">@dimen/font_15</item>
    </style>

    <!-- 使用style方式定义activity切换动画 -->
    <!--
    activityOpenEnterAnimation   // 打开新的Activity并进入新的Activity展示的动画
    activityOpenExitAnimation    // 打开新的Activity并销毁之前的Activity展示的动画
    activityCloseEnterAnimation  // 关闭当前Activity进入上一个Activity展示的动画
    activityCloseExitAnimation   // 关闭当前Activity时展示的动画
    -->
    <style name="alphaActivityAnim">
        <item name="android:activityOpenEnterAnimation">@anim/fade_in</item>
        <item name="android:activityOpenExitAnimation">@anim/fade_out</item>
        <!-- <item name="android:activityCloseEnterAnimation">@anim/scale_fade_in</item>-->
        <!-- <item name="android:activityCloseExitAnimation">@anim/fade_out</item>-->
    </style>

    <style name="scaleActivityAnim">
        <item name="android:activityOpenEnterAnimation">@anim/scale_fade_in</item>
        <item name="android:activityOpenExitAnimation">@anim/scale_fade_out</item>
    </style>


    <style name="DivideLine">
        <item name="android:background">@color/dividerColor</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">1px</item>
    </style>

    <style name="MainTheme" parent="AppTheme">
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowActionBar">false</item>
        <item name="android:windowFullscreen">false</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowIsTranslucent">false</item>
        <item name="android:windowDisablePreview">true</item>
    </style>

    <style name="GuideTheme" parent="FullScreen">
        <item name="android:windowIsTranslucent">false</item>
        <item name="android:windowDisablePreview">true</item>
    </style>

    <style name="FullScreen" parent="AppTheme">
        <item name="android:windowNoTitle">true</item><!--无标题-->
        <item name="android:windowActionBar">false</item><!--无ActionBar-->
        <item name="android:windowFullscreen">true</item><!--全屏即无通知栏-->
        <item name="android:windowContentOverlay">@null</item><!--是否有遮盖-->
    </style>

</resources>
